{"ast":null,"code":"var _jsxFileName = \"/Users/alyson/codelab/leaflet-draw/src/components/Map.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { MapContainer, TileLayer, ScaleControl } from \"react-leaflet\";\nimport { useRef, useCallback, useMemo, useEffect } from \"react\";\nimport Freedraw, { ALL } from \"react-leaflet-freedraw\";\nimport LeafletControlGeocoder from \"./LeafletControlGeocoder\";\nimport LeafletGeosearchControl from \"./LeafletGeosearchControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Map = function Map(_ref) {\n  _s();\n\n  var center = _ref.center,\n      zoom = _ref.zoom,\n      setMap = _ref.setMap,\n      freeDrawMode = _ref.freeDrawMode;\n  var freedrawRef = useRef(null);\n  console.log(freedrawRef);\n  var handleMarkersDraw = useCallback(function (event) {\n    return console.log(\"markers drawn - latLngs\", event.latLngs, \"Polygons:\", freedrawRef.current.size(), \"FreeDraw:\", freedrawRef.current.options);\n  }, []);\n  var handleModeChange = useCallback(function (event) {\n    return console.log(\"mode changed\", event);\n  }, []);\n  var handleEscapeKey = useCallback(function (event) {\n    // Cancel the current FreeDraw action when the escape key is pressed.\n    if (event.key === \"Escape\") {\n      freedrawRef.current.cancel();\n    }\n  }, []);\n  var handlers = useMemo(function () {\n    return {\n      markers: handleMarkersDraw,\n      mode: handleModeChange\n    };\n  }, [handleMarkersDraw, handleModeChange]);\n  useEffect(function () {\n    window.addEventListener(\"keydown\", handleEscapeKey);\n    return function () {\n      return window.removeEventListener(\"keydown\", handleEscapeKey);\n    };\n  }, [handleEscapeKey]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: zoom,\n    scrollWheelZoom: true,\n    whenCreated: setMap,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      minZoom: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(LeafletControlGeocoder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ScaleControl, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Freedraw, {\n      mode: freeDrawMode,\n      eventHandlers: handlers,\n      ref: freedrawRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Map, \"O7Nt6jZGNQ5Tbhbigqv8u33CnXI=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["MapContainer","TileLayer","ScaleControl","useRef","useCallback","useMemo","useEffect","Freedraw","ALL","LeafletControlGeocoder","LeafletGeosearchControl","Map","center","zoom","setMap","freeDrawMode","freedrawRef","console","log","handleMarkersDraw","event","latLngs","current","size","options","handleModeChange","handleEscapeKey","key","cancel","handlers","markers","mode","window","addEventListener","removeEventListener"],"sources":["/Users/alyson/codelab/leaflet-draw/src/components/Map.js"],"sourcesContent":["import { MapContainer, TileLayer, ScaleControl } from \"react-leaflet\";\r\nimport { useRef, useCallback, useMemo, useEffect } from \"react\";\r\nimport Freedraw, { ALL } from \"react-leaflet-freedraw\";\r\n\r\nimport LeafletControlGeocoder from \"./LeafletControlGeocoder\";\r\nimport LeafletGeosearchControl from \"./LeafletGeosearchControl\";\r\n\r\nconst Map = ({ center, zoom, setMap, freeDrawMode }) => {\r\n  const freedrawRef = useRef(null);\r\n  console.log(freedrawRef);\r\n\r\n  const handleMarkersDraw = useCallback(\r\n    (event) =>\r\n      console.log(\r\n        \"markers drawn - latLngs\",\r\n        event.latLngs,\r\n        \"Polygons:\",\r\n        freedrawRef.current.size(),\r\n        \"FreeDraw:\",\r\n        freedrawRef.current.options\r\n      ),\r\n    []\r\n  );\r\n  const handleModeChange = useCallback(\r\n    (event) => console.log(\"mode changed\", event),\r\n    []\r\n  );\r\n\r\n  const handleEscapeKey = useCallback((event) => {\r\n    // Cancel the current FreeDraw action when the escape key is pressed.\r\n    if (event.key === \"Escape\") {\r\n      freedrawRef.current.cancel();\r\n    }\r\n  }, []);\r\n\r\n  const handlers = useMemo(\r\n    () => ({\r\n      markers: handleMarkersDraw,\r\n      mode: handleModeChange\r\n    }),\r\n    [handleMarkersDraw, handleModeChange]\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleEscapeKey);\r\n    return () => window.removeEventListener(\"keydown\", handleEscapeKey);\r\n  }, [handleEscapeKey]);\r\n\r\n  return (\r\n    <MapContainer\r\n      center={center}\r\n      zoom={zoom}\r\n      scrollWheelZoom={true}\r\n      whenCreated={setMap}\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        minZoom={2}\r\n      />\r\n\r\n      <LeafletControlGeocoder />\r\n\r\n      <ScaleControl />\r\n      <Freedraw\r\n        mode={freeDrawMode}\r\n        eventHandlers={handlers}\r\n        ref={freedrawRef}\r\n      />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,SAAvB,EAAkCC,YAAlC,QAAsD,eAAtD;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,OAA9B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,QAAP,IAAmBC,GAAnB,QAA8B,wBAA9B;AAEA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,uBAAP,MAAoC,2BAApC;;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAA4C;EAAA;;EAAA,IAAzCC,MAAyC,QAAzCA,MAAyC;EAAA,IAAjCC,IAAiC,QAAjCA,IAAiC;EAAA,IAA3BC,MAA2B,QAA3BA,MAA2B;EAAA,IAAnBC,YAAmB,QAAnBA,YAAmB;EACtD,IAAMC,WAAW,GAAGb,MAAM,CAAC,IAAD,CAA1B;EACAc,OAAO,CAACC,GAAR,CAAYF,WAAZ;EAEA,IAAMG,iBAAiB,GAAGf,WAAW,CACnC,UAACgB,KAAD;IAAA,OACEH,OAAO,CAACC,GAAR,CACE,yBADF,EAEEE,KAAK,CAACC,OAFR,EAGE,WAHF,EAIEL,WAAW,CAACM,OAAZ,CAAoBC,IAApB,EAJF,EAKE,WALF,EAMEP,WAAW,CAACM,OAAZ,CAAoBE,OANtB,CADF;EAAA,CADmC,EAUnC,EAVmC,CAArC;EAYA,IAAMC,gBAAgB,GAAGrB,WAAW,CAClC,UAACgB,KAAD;IAAA,OAAWH,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,KAA5B,CAAX;EAAA,CADkC,EAElC,EAFkC,CAApC;EAKA,IAAMM,eAAe,GAAGtB,WAAW,CAAC,UAACgB,KAAD,EAAW;IAC7C;IACA,IAAIA,KAAK,CAACO,GAAN,KAAc,QAAlB,EAA4B;MAC1BX,WAAW,CAACM,OAAZ,CAAoBM,MAApB;IACD;EACF,CALkC,EAKhC,EALgC,CAAnC;EAOA,IAAMC,QAAQ,GAAGxB,OAAO,CACtB;IAAA,OAAO;MACLyB,OAAO,EAAEX,iBADJ;MAELY,IAAI,EAAEN;IAFD,CAAP;EAAA,CADsB,EAKtB,CAACN,iBAAD,EAAoBM,gBAApB,CALsB,CAAxB;EAQAnB,SAAS,CAAC,YAAM;IACd0B,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCP,eAAnC;IACA,OAAO;MAAA,OAAMM,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCR,eAAtC,CAAN;IAAA,CAAP;EACD,CAHQ,EAGN,CAACA,eAAD,CAHM,CAAT;EAKA,oBACE,QAAC,YAAD;IACE,MAAM,EAAEd,MADV;IAEE,IAAI,EAAEC,IAFR;IAGE,eAAe,EAAE,IAHnB;IAIE,WAAW,EAAEC,MAJf;IAAA,wBAME,QAAC,SAAD;MACE,WAAW,EAAC,0EADd;MAEE,GAAG,EAAC,oDAFN;MAGE,OAAO,EAAE;IAHX;MAAA;MAAA;MAAA;IAAA,SANF,eAYE,QAAC,sBAAD;MAAA;MAAA;MAAA;IAAA,SAZF,eAcE,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA,SAdF,eAeE,QAAC,QAAD;MACE,IAAI,EAAEC,YADR;MAEE,aAAa,EAAEc,QAFjB;MAGE,GAAG,EAAEb;IAHP;MAAA;MAAA;MAAA;IAAA,SAfF;EAAA;IAAA;IAAA;IAAA;EAAA,SADF;AAuBD,CAhED;;GAAML,G;;KAAAA,G;AAkEN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}